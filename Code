local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Welcome | Pixel Script",
   LoadingTitle = "Pixel Script",
   LoadingSubtitle = "by Dev Matyz",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = true,
      Invite = "https://discord.com/invite/9H9PXFV92r", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Pixel Script | Security",
      Subtitle = "Key System",
      Note = "Discord Server Only",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://pastebin.com/raw/DPDSKW7v"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local PlayerTab = Window:CreateTab("ðŸ‘¥|Player", null) -- Title, Image
local Section = PlayerTab:CreateSection("LocalPlayer")

Rayfield:Notify({
   Title = "You Excuted",
   Content = "Basic Edition | Thanks! For Running Script",
   Duration = 6.5,
   Image = null,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})

local Button = PlayerTab:CreateButton({
   Name = "Infinite Jump",
   Callback = function()
-- LocalScript inside StarterPlayerScripts

-- Define a function to make the character jump
local function jumpInfinitely(character)
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        while true do
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            wait(0.1) -- Wait a bit to allow the jump animation to play
        end
    end
end

-- Get the player's character
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Start the infinite jump
jumpInfinitely(character)

-- Ensure the function runs again if the character respawns
player.CharacterAdded:Connect(function(newCharacter)
    wait(1) -- Wait for the character to load properly
    jumpInfinitely(newCharacter)
end)
   -- The function that takes place when the button is pressed
   end,
})
